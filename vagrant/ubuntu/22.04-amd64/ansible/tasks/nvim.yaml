################################################################################
- name: Neovim Directory
  become: yes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /opt/src/neovim
    - /opt/nvim
- name: Install Neovim on amd64
  become: yes
  when: ansible_architecture in ["x86_64", "amd64"]
  unarchive:
    remote_src: yes
    src: https://github.com/neovim/neovim/releases/download/stable/nvim-linux64.tar.gz
    dest: /opt/nvim
    creates: /opt/nvim/bin/nvim
    extra_opts:
      - --strip-components=1
- name: Install Neovim on arm64
  become: yes
  when: ansible_architecture in ["aarch64", "arm64", "armv8"]
  block:
    - name: Install Neovim Build Tools
      apt:
        name:
          - cmake 
          - curl
          - gettext
          - ninja-build
          - unzip
    - name: Download Neovim Source
      git:
        repo: https://github.com/neovim/neovim.git
        dest: /opt/src/neovim
        version: stable
    - name: Build Neovim
      shell: |
        make CMAKE_BUILD_TYPE=Release CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX=/opt/nvim"
      args:
        chdir: /opt/src/neovim
        executable: /usr/bin/bash
    - name: Install Neovim
      shell: |
        make install
      args:
        chdir: /opt/src/neovim
        executable: /usr/bin/bash
- name: Create neovim rc.sh files
  become_user: "{{ user }}"
  copy:
    src: "{{ item }}"
    dest: "{{ ansible_env.HOME }}/.config/{{ item }}"
  with_items:
    - rc.d/nvim.sh
################################################################################
- name: Install NvChad
  become_user: "{{ user }}"
  git:
    repo: https://github.com/NvChad/NvChad
    dest: "{{ ansible_env.HOME }}/.config/nvim"
    depth: 1
    version: v2.0
- name: Neovim Configurations
  become_user: "{{ user }}"
  git:
    repo: https://github.com/rurumimic/nvim
    dest: "{{ ansible_env.HOME }}/.config/nvim/lua/custom"
################################################################################
- name: Create a virtualenv for nvim
  become_user: "{{ user }}"
  shell: |
    source {{ ansible_env.HOME }}/.config/rc.d/python.sh
    pyenv virtualenv {{ version.python[0] }} vim
  args:
    executable: /usr/bin/bash
    creates: "{{ ansible_env.HOME }}/.pyenv/versions/vim/bin/python"
- name: Install PIP Packages for nvim
  become_user: "{{ user }}"
  pip:
    executable: "{{ ansible_env.HOME }}/.pyenv/versions/vim/bin/pip"
    name:
      - pip
      - setuptools
      - wheel
      - pynvim
    extra_args: --upgrade
################################################################################

